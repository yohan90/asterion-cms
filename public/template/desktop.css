/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0; }

html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%; }

ul {
  list-style: none; }

a {
  text-decoration: none; }

body {
  margin: 0; }

main {
  display: block; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible; }

pre {
  font-family: monospace, monospace;
  font-size: 1em; }

a {
  background-color: transparent; }

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted; }

b,
strong {
  font-weight: bolder; }

code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

img {
  border-style: none; }

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

fieldset {
  padding: 0.35em 0.75em 0.625em; }

legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal; }

progress {
  vertical-align: baseline; }

textarea {
  overflow: auto; }

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  padding: 0; }

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }

details {
  display: block; }

summary {
  display: list-item; }

template {
  display: none; }

/**
* Add the correct display in IE 10.
*/
[hidden] {
  display: none; }

/*** NAVBAR LEFT ***/
body {
  background: url(http://127.0.0.1/Asterion/public/template/img/background.png) no-repeat #09414c center 38px;
  font-family: Arial, Verdana, Sans-serif;
  font-size: 14px;
  color: #1d1812; }

#container {
  width: 940px;
  margin: 323px auto 60px auto;
  display: flex;
  border: 3px solid #042126;
  border-radius: 3px; }

.topBar {
  background-color: #1b1b1b;
  width: 100%;
  height: 37px;
  border-bottom: 3px solid #0b3234;
  position: fixed;
  z-index: 3;
  top: 0;
  left: 0;
  right: 0; }
  .topBar .menuTop {
    height: 51px;
    justify-content: center;
    display: flex; }
    .topBar .menuTop a {
      width: 186px;
      height: 51px;
      float: left;
      background: url(http://127.0.0.1/Asterion/public/template/img/topMenu.png) no-repeat; }
    .topBar .menuTop .accueil {
      background-position: -3px 0; }
      .topBar .menuTop .accueil:hover {
        background-position: -3px -51px; }
    .topBar .menuTop .boutique {
      background-position: -189px 0; }
      .topBar .menuTop .boutique:hover {
        background-position: -189px -51px; }
    .topBar .menuTop .classement {
      background-position: -375px 0; }
      .topBar .menuTop .classement:hover {
        background-position: -375px -51px; }
    .topBar .menuTop .armurie {
      background-position: -561px 0; }
      .topBar .menuTop .armurie:hover {
        background-position: -561px -51px; }
    .topBar .menuTop .forum {
      background-position: -747px 0; }
      .topBar .menuTop .forum:hover {
        background-position: -747px -51px; }

#content_left {
  background-color: #0d0d0d;
  width: 171px;
  border-top-left-radius: 3px;
  border-bottom-left-radius: 3px; }
  #content_left .connect {
    background: url(http://127.0.0.1/Asterion/public/template/img/espaceMembre.png);
    width: 235px;
    height: 262px;
    left: -10px;
    top: -33px;
    position: relative;
    z-index: 2;
    padding: 68px 0 0 22px; }
    #content_left .connect form {
      width: 147px;
      height: auto; }
      #content_left .connect form input[type=text], #content_left .connect form input[type=password] {
        border: 1px solid #171c00;
        border-radius: 3px;
        background-color: #374401;
        height: 26px;
        width: 96%;
        margin: 5px auto 0 auto;
        outline: none;
        color: #687e00;
        font-size: 11px;
        padding-left: 7px; }
        #content_left .connect form input[type=text]::placeholder, #content_left .connect form input[type=password]::placeholder {
          color: #5f7400; }
      #content_left .connect form label {
        font-family: Verdana, Sans-serif;
        font-size: 12px;
        font-family: "Verdana";
        color: #687e00; }
      #content_left .connect form input[type=submit] {
        background: url(http://127.0.0.1/Asterion/public/template/img/btn_connect.png) no-repeat;
        width: 131px;
        height: 26px;
        border: 0;
        cursor: pointer;
        outline: none;
        display: block;
        margin: 0 auto;
        margin-left: 4px;
        margin-top: 10px; }
        #content_left .connect form input[type=submit]:hover {
          background-position: 0 -26px; }
  #content_left .navigation {
    margin-top: -65px; }
    #content_left .navigation .title {
      width: 155px;
      height: 29px;
      display: block;
      margin-bottom: 28px;
      background: url(http://127.0.0.1/Asterion/public/template/img/title_menu.png) no-repeat; }
      #content_left .navigation .title.community {
        background-position: 0 -33px; }
      #content_left .navigation .title.statistics {
        background-position: 0 -66px; }
    #content_left .navigation ul {
      margin-top: -28px;
      position: relative;
      z-index: 1; }
      #content_left .navigation ul li {
        background-color: #1b1b1b;
        width: 100%;
        height: 33px;
        line-height: 33px;
        padding: 0 10px;
        border-bottom: 1px solid #030303; }
        #content_left .navigation ul li a {
          color: #707070;
          font-size: 13px;
          display: flex;
          align-items: center;
          justify-content: space-between;
          flex-direction: row; }
          #content_left .navigation ul li a span.on {
            color: #008000; }
          #content_left .navigation ul li a span.off {
            color: #ff0000; }
        #content_left .navigation ul li::before {
          content: '';
          border-top: 1px solid #3a3a3a;
          height: 1px;
          width: 100%;
          position: absolute;
          left: 0;
          right: 0; }
        #content_left .navigation ul li:hover {
          background-color: #282828;
          transition-duration: .5s; }
        #content_left .navigation ul li:nth-child(1)::before {
          border-top: 1px solid #3a3a3a; }
        #content_left .navigation ul li.b-top {
          border-top: 1px solid #030303; }
        #content_left .navigation ul li.b-bottom {
          border-bottom: 1px solid #030303; }
          #content_left .navigation ul li.b-bottom::after {
            content: '';
            border-top: 1px solid #3a3a3a;
            height: 1px;
            width: 100%;
            position: absolute;
            left: 0;
            right: 0; }

#content_middle {
  background-color: #d9d2c2;
  height: 900px;
  width: 598px; }

#content_right {
  background-color: #0d0d0d;
  width: 171px;
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px; }


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/